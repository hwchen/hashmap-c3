config default = "build"

let profile = "release"

# Pick cflags based on the build profile
let cflags = profile | match {
    "debug" => ["-O0"]
    "release" => ["-O3"]
    "asan-address" => ["-O1", "--sanitize=address"]
    "%" => ""
}

build "benchit" {
    from [
        "bench/bench.c3",
        "ordered-map.c3",
        "unordered-map.c3",
        "hash.c3",
        "wyhash.c3",
    ]
    run "c3c compile {cflags*} <in*> -o <out>"
}

build "testrun" {
    from [
        "map-tests.c3",
        "map-tests-std.c3",
        "ordered-map.c3",
        "unordered-map.c3",
        "hash.c3",
        "wyhash.c3",
    ]
    # Compiles and runs, ok for now because running tests is fast
    run "c3c compile-test --no-run {cflags*} <in*> -o <out>"
}

build "benchit-zig" {
    from "bench/bench.zig"
    run "zig build-exe -OReleaseFast -fno-strip <in> -femit-bin=<out>"
}

build "benchit-odin" {
    from "bench/bench.odin"
    run " odin build <in> -file -o:aggressive -out:<out>"
}

task build {
    build "benchit"
}

task build-odin {
    build "benchit-odin"
}

task build-zig {
    build "benchit-zig"
}

task bench {
    let bench_exe = "benchit"
    build bench_exe
    run "<bench_exe>"

    let zig_insert_exe = "benchit-zig"
    build zig_insert_exe
    run "<zig_insert_exe>"

    let odin_insert_exe = "benchit-odin"
    build odin_insert_exe
    run "<odin_insert_exe>"
}

task quickbench {
    let bench_exe = "benchit"
    build bench_exe
    run "<bench_exe> 1000000"

    let zig_insert_exe = "benchit-zig"
    build zig_insert_exe
    run "<zig_insert_exe> 1000000"

    let odin_insert_exe = "benchit-odin"
    build odin_insert_exe
    run "<odin_insert_exe> 1000000"
}

task test {
    let test_exe = "testrun"
    build test_exe
    run "<test_exe>"
}
